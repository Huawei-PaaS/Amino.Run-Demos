apply plugin: 'java-library'

repositories {
    jcenter()
    google()
    maven { url  "https://dl.bintray.com/terryzhuo/Amino" }
}

dependencies {
    implementation 'com.amino-os.run:amino-run-core:1.0.0.RC6'
}

// Task for Stub compilation
task compileRecogStub(type: JavaCompile) {
    source = sourceSets.main.java.srcDirs
    classpath = sourceSets.main.compileClasspath
    destinationDir = sourceSets.main.output.classesDir
    options.incremental = true
}

// Task for Stub generation
task genRecogStub(type: JavaExec) {
    main = "amino.run.compiler.StubGenerator"
    classpath = sourceSets.main.runtimeClasspath
    def pkgName = 'facerecog'
    def src = "$projectDir/build/classes/java/main/facerecog/"
    def dst = "$projectDir/src/main/java/facerecog/stubs/"
    args src, pkgName, dst
}

genRecogStub.mustRunAfter compileJava
compileRecogStub.dependsOn genRecogStub
jar.dependsOn compileRecogStub

// Task for running the OMS
task runoms(type: JavaExec) {
    dependsOn jar
    classpath = sourceSets.main.runtimeClasspath
    main = 'amino.run.oms.OMSServerImpl'
    args project.property('omsIpFlag'), project.property('omsIp'), project.property('omsPortFlag'), project.property('omsPort')
}

// Task for running the Kernel Server
task runks(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'amino.run.kernel.server.KernelServerImpl'
    args project.property('kernelServerIpFlag'), project.property('kernelServerIp'), project.property('kernelServerPortFlag'), project.property('kernelServerPort'),
            project.property('omsIpFlag'), project.property('omsIp'), project.property('omsPortFlag'), project.property('omsPort')
}


// Task for running Face Recognition demo app
task runapp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "application.DemoAppStart"
    args project.property('omsIp'), project.property('omsPort'), project.property('kernelIpAndroid'),
            project.property('kernelServerPort'), project.property('inferenceType'), project.property('sourceType'),
            project.property('targetType')
}